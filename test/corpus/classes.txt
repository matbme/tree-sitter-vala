==================
Class declaration
==================

public class MyClass {
    // ...
}

---

(source_file
    (class_declaration
        (modifier)
        (camel_cased_identifier)
        (block (comment))
    )
)


===================================
Class declaration with inheritance
===================================

public class MyClass : GLib.Object {
    // ...
}

---

(source_file
    (class_declaration
        (modifier)
        (camel_cased_identifier)
        (namespaced_identifier (camel_cased_identifier) (camel_cased_identifier))
        (block (comment))
    )
)


====================================
Class with GObject-stype properties
====================================

public class MyClass : Object {
    private int year_of_birth = 2493;

    public int age {
        get { return current_year - year_of_birth; }
        set { year_of_birth = current_year - value; }
    }
}

---

(source_file
    (class_declaration
        (modifier)
        (camel_cased_identifier)
        (camel_cased_identifier)
        (block
            (declaration (modifier) (primitive_type) (identifier) (number))
            (declaration
                (modifier)
                (primitive_type)
                (identifier)
                (gobject_property_acces
                    (property_parameter) (block
                        (return_statement
                            (binary_expression (identifier) (identifier))
                        )
                    )
                    (property_parameter) (block
                        (assignment (identifier) (binary_expression (identifier) (identifier)))
                    )
                )
            )
        )
    )
)


===============================
Class with GObject constructor
===============================

public class MyClass : Object {
    construct {
        // ...
    }
}

---

(source_file
    (class_declaration
        (modifier)
        (camel_cased_identifier)
        (camel_cased_identifier)
        (block
            (gobject_contruct (block
                (comment)
            ))
        )
    )
)


========================
Class with generic type
========================

public class MyClass<G> : Object {
	public ArrayList<G> data;

    construct {
		data = new ArrayList<G> ();
    }
}

---

(source_file
    (class_declaration
        (modifier)
        (generic_identifier (camel_cased_identifier) (uppercased_identifier))
        (camel_cased_identifier)
        (block
            (declaration
                (modifier)
                (generic_identifier (camel_cased_identifier) (uppercased_identifier))
                (identifier)
            )
            (gobject_contruct (block
                (assignment 
                    (identifier) 
                    (new_instance
                        (function_call
                            (generic_identifier 
                                (camel_cased_identifier) (uppercased_identifier)
                            )
                            (parameter_list)
                        )
                    )
                )
            ))
        )
    )
)


======================
Interface declaration
======================

public interface ITest : GLib.Object {
    public abstract int data_1 { get; set; }
    public abstract void method_1();
}

---

(source_file
    (interface_declaration
        (modifier)
        (camel_cased_identifier)
        (namespaced_identifier (camel_cased_identifier) (camel_cased_identifier))
        (block
            (declaration (modifier) (modifier) (primitive_type) (identifier)
                (gobject_property_acces (property_parameter) (property_parameter))
            )
            (function_definition 
                (modifier)
                (modifier)
                (primitive_type)
                (identifier)
                (parameter_list)
            )
        )
    )
)


=======================
Class with constructor
=======================

public class Storage : Object {
	public Storage () {
        // ...
    }
}

---

(source_file
    (class_declaration (modifier) (camel_cased_identifier) (camel_cased_identifier) (block
        (class_constructor_definition (modifier) (camel_cased_identifier) (parameter_list) (block
            (comment)
        ))
    ))
)
